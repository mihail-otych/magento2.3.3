<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * @author Amasty Team
 * @copyright Copyright (c) 2019 Amasty (https://www.amasty.com)
 * @package Amasty_Rewards
 */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="RPFunctionalCheckActionGetXPointsForCompletingOrder">
        <annotations>
            <features value="Rewards Points Earning Rule"/>
            <stories value="Functional Rewards Points Earning Rule"/>
            <title value="Check Rewards Points Earning Rule Order Complete"/>
            <description value="Check Rewards Points Earning Rule Order Complete"/>
            <severity value="CRITICAL"/>
            <testCaseId value="RP-MFTF-32"/>
            <group value="Amasty"/>
            <group value="Rewards"/>
            <group value="RewardsFunctional"/>
            <group value="RewardsFunctionalRules"/>
        </annotations>

        <before>
            <!-- Create Data for Test -->
            <createData entity="RewardPointsCustomer" stepKey="createCustomer"/>
            <createData entity="_defaultCategory" stepKey="createCategory"/>
            <createData entity="SimpleProductByImpulseDuffle" stepKey="createFirstSimpleProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <!-- Login To Admin Area -->
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <!-- Configuration Settings for Test-->
            <actionGroup ref="AdminConfigurationSettingRewardsGeneral" stepKey="ConfigurationGeneralSettingRewards">
                <argument name="adminSettingRewardsGeneral" value="defaultGeneralSettingRewards"/>
            </actionGroup>
            <actionGroup ref="AdminConfigurationSettingRewardsExpirationWithDays" stepKey="configurationPointsExpirationSetting">
                <argument name="adminSettingRewardsExpirationSettings" value="SetSettingRewardsExpirationSettingsExpireFourDays"/>
            </actionGroup>
            <actionGroup ref="AdminCreateRewardPointsRule" stepKey="CreateRewardsRuleOrderComplete">
                <argument name="rewardPointsRule" value="ruleCheckActionGetXPointsForCompletingOrder"/>
            </actionGroup>
        </before>

        <after>
            <!-- Delete All Created Data -->
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="createFirstSimpleProduct" stepKey="deleteFirstSimpleProduct"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <actionGroup ref="AdminDeleteRewardPointsRuleByName" stepKey="deleteRewardsRule">
                <argument name="rewardPointsRule" value="ruleCheckActionGetXPointsForCompletingOrder" />
            </actionGroup>
            <!-- Return the Default Settings Module -->
            <actionGroup ref="AdminConfigurationSettingRewardsExpirationWithClearFields" stepKey="defaultConfigurationPointsExpire">
                <argument name="adminSettingRewardsExpirationSettings" value="SetDefaultSettingRewardsExpirationSettings"/>
            </actionGroup>
            <amOnPage url="admin/admin/auth/logout/" stepKey="amOnLogoutPage"/>
        </after>

        <!-- Login to Storefront as Previously Created Customer-->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginAsCustomer">
            <argument name="Customer" value="$$createCustomer$$"/>
        </actionGroup>
        <!-- Add First Created Product to Cart-->
        <actionGroup ref="AddCreatedProductToCart" stepKey="AddFirstProductToCart">
            <argument name="valueQty" value="_enterQty1"/>
            <argument name="product" value="$$createFirstSimpleProduct$$"/>
        </actionGroup>
        <!-- Go to Checkout, Fill Shipping Page and Click to Next-->
        <actionGroup ref="AmastyCreateOrderAsCustomerOnCheckoutShippingPage" stepKey="GoToCheckoutOnThePaymentPageAsCustomer">
            <argument name="shippingMethodsOnCheckout" value="FlatRateMethod"/>
        </actionGroup>
        <!-- Create Order with Payment Methods Check Money -->
        <actionGroup ref="StorefrontCreateOrderAndGrabOrderNumber" stepKey="CreateOrderAsCustomerWithCheckMoney">
            <argument name="paymentMethods" value="paymentCheckMoneyOrder"/>
        </actionGroup>
        <!-- Create Invoice and Shipment for Order -->
        <actionGroup ref="AdminOpenOrderOnId" stepKey="openOrder">
            <argument name="orderId" value="{$grabOrderNumberCreateOrderAsCustomerWithCheckMoney}"/>
        </actionGroup>
        <actionGroup ref="AdminCreateInvoiceAndShipmentActionGroup" stepKey="createInvoiceAndShipment"/>
        <!-- Check Usage History Reward Points (Change, Days Left, Points Left) -->
        <actionGroup ref="StorefrontCheckRewardPointsHistoryActionInCustomerAccount" stepKey="CheckRewardsHistoryChangeAndLeft">
            <argument name="rewardsHistoryRecordData" value="CheckActionGetXPointsForCompletingOrderHistory"/>
        </actionGroup>
        <actionGroup ref="StorefrontCheckRewardPointsHistoryInCustomerAccountNoExpireDay" stepKey="CheckRewardsHistoryExpireDay">
            <argument name="rewardsHistoryRecordData" value="CheckActionGetXPointsForCompletingOrderHistory"/>
        </actionGroup>

    </test>
</tests>
