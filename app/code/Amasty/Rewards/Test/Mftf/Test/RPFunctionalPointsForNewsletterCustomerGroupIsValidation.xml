<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * @author Amasty Team
 * @copyright Copyright (c) 2019 Amasty (https://www.amasty.com)
 * @package Amasty_Rewards
 */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="RPFunctionalPointsForNewsletterCustomerGroupIsValidation"
          extends="RPFunctionalCheckActionGetXPointsForNewsletterSubscription">
        <annotations>
            <features value="Rewards Points Earning Rule"/>
            <stories value="Functional Rewards Points Rule Customer Group"/>
            <title value="Check Rewards Points Rule for Newsletter Subscription with Customer Group Retailer"/>
            <description value="Check Rewards Points Rule for Newsletter Subscription with Customer Group Is Validation"/>
            <severity value="CRITICAL"/>
            <testCaseId value="RP-MFTF-4902"/>
            <group value="Amasty"/>
            <group value="Rewards"/>
            <group value="RewardsFunctional"/>
            <group value="RewardsFunctionalRules"/>
        </annotations>

        <before>
            <remove keyForRemoval="configurationPointsExpirationSetting"/>
            <createData entity="RewardPointsCustomerRetailer" stepKey="createCustomer"/>
            <actionGroup ref="AdminCreateRewardPointsRule" stepKey="CreateRewardsRuleNewsletterSubscription">
                <argument name="rewardPointsRule" value="ruleCheckNewsletterWithCustomerOnlyRetailer"/>
            </actionGroup>
        </before>

        <after>
            <remove keyForRemoval="defaultConfigurationPointsExpire"/>
            <actionGroup ref="AdminDeleteRewardPointsRuleByName" stepKey="deleteRewardsRule">
                <argument name="rewardPointsRule" value="ruleCheckNewsletterWithCustomerOnlyRetailer" />
            </actionGroup>
        </after>

        <remove keyForRemoval="CheckRewardsHistoryExpireDay"/>
        <actionGroup ref="StorefrontCheckRewardPointsHistoryActionInCustomerAccount" stepKey="CheckRewardsHistoryChangeAndLeft">
            <argument name="rewardsHistoryRecordData" value="CheckNewsletterCustomerGroupIsValidHistory"/>
        </actionGroup>
        <actionGroup ref="AdminCheckRewardPointsHistoryActionInCustomerAccount" stepKey="CheckRewardsHistory">
            <argument name="customerId" value="$$createCustomer.id$$"/>
            <argument name="rewardsHistoryRecordData" value="CheckNewsletterCustomerGroupIsValidHistory"/>
        </actionGroup>

    </test>
</tests>
